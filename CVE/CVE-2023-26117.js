// Define controllers.
class AppCtrl {
  urlSuffix = null;
  duration = '(N/A)';

  static $inject = ['$resource'];
  constructor($resource) {
    this.$resource = $resource;
    this.setUrlSuffixWithSlashesPowerOf2Exponent(0);
  }

  setUrlSuffixWithSlashesPowerOf2Exponent(exponent) {
    this.urlSuffix = `foo${'/'.repeat(2 ** exponent)}bar`;
  }

  sendRequest() {
    try {
      const api = this.$resource(`https://example.com/something/${this.urlSuffix}`, {}, {}, {
        cancellable: true,
      });

      const start = performance.now();
      const items = api.query();
      const end = performance.now();

      this.duration = `${((end - start) / 1000).toFixed(2)} seconds`;

      // Cancel the request before it has a chance of being
      // sent; that's not what we're testing here.
      items.$cancelRequest();
    } catch (err) {
      const isChromeBrowser = navigator.userAgent.includes('Chrome');
      const isTooMuchRecursionError = `${err}` === 'InternalError: too much recursion';

      let message = `The operation failed with the following error:\n\n    ${err}`
      if (!isChromeBrowser && isTooMuchRecursionError) {
        message += '\n\nTo avoid this error, it is recommended to run this test case in the Chrome browser.';
      }

      alert(message);
      console.error(err);

      this.duration = '(APP CRASHED)';
    }
  }
}

// Define and configure the app.
angular
    .module('app', ['ngResource'])
    .controller('AppCtrl', AppCtrl);
